---
description: Agent-requested checklist for implementing a feature with minimal, high-quality edits.
globs:
alwaysApply: false
---

When asked to implement a feature:

1. Verify scope and reuse:

   - Identify existing components/hooks/utils to reuse (esp. under `src/components/ui`, `src/hooks`, `src/lib`).
   - Confirm that no similar feature already exists.

2. File strategy:

   - Create small, focused files. Avoid index re-exports.
   - For interactive UI, isolate client-only pieces behind `use client`.

3. Types and enums:

   - Use existing generated/types; avoid `any`. Introduce enums if a discriminant will be reused.

4. Data layer:

   - Use `gqlServerFetch` in Server Components; `gqlFetch`/React Query in clients.
   - Keep keys stable, and rely on the shared query client for error handling.

5. Styling:

   - Use Tailwind and theme tokens from `globals.css`. Reuse UI primitives.

6. Scope hygiene:

   - Do not modify unrelated UI or behavior.
   - Do not run Prisma migrations via the agent.

7. DRY:
   - If logic repeats, extract a util or reusable hook.

References:
@src/app/layout.tsx
@src/app/globals.css
@src/lib/graphql.ts
@src/lib/gqlServerFetch.ts
@src/lib/get-query-client.ts
@src/components/ui
@src/hooks
