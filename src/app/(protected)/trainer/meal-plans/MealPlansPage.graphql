fragment MealPlanTemplate on MealPlan {
  id
  title
  description
  isDraft
  dailyCalories
  dailyProtein
  dailyCarbs
  dailyFat
  createdAt
  updatedAt
  assignedCount

  weeks {
    id
    weekNumber
    name
    description

    days {
      id
      dayOfWeek
      targetCalories
      targetProtein
      targetCarbs
      targetFat

      meals {
        id
        name
        dateTime
        instructions

        foods {
          id
          name
          quantity
          unit
          caloriesPer100g
          proteinPer100g
          carbsPer100g
          fatPer100g
          fiberPer100g
          openFoodFactsId
        }
      }
    }
  }
}

query GetMealPlanTemplates($draft: Boolean) {
  getMealPlanTemplates(draft: $draft) {
    id
    title
    description
    isDraft
    dailyCalories
    dailyProtein
    dailyCarbs
    dailyFat
    weekCount
    assignedCount
    createdAt
    updatedAt
  }
}

query GetMealPlanById($id: ID!) {
  getMealPlanById(id: $id) {
    ...MealPlanTemplate
  }
}

mutation CreateMealPlan($input: CreateMealPlanInput!) {
  createMealPlan(input: $input) {
    id
    success
  }
}

mutation CreateDraftMealTemplate {
  createDraftMealTemplate {
    id
    title
    description
    isDraft
    dailyCalories
    dailyProtein
    dailyCarbs
    dailyFat
    createdAt
    updatedAt
  }
}

mutation DuplicateMealPlan($id: ID!) {
  duplicateMealPlan(id: $id)
}

mutation AssignMealPlanToClient($input: AssignMealPlanToClientInput!) {
  assignMealPlanToClient(input: $input)
}

# New batch meal operation
mutation SaveMeal($input: SaveMealInput!) {
  saveMeal(input: $input)
}

mutation UpdateMealPlanDetails($input: UpdateMealPlanDetailsInput!) {
  updateMealPlanDetails(input: $input)
}

# Food logging mutations (kept for future use)
mutation LogMealFood($input: LogMealFoodInput!) {
  logMealFood(input: $input) {
    id
    name
    quantity
    unit
    calories
    protein
    carbs
    fat
    fiber
    notes
    createdAt
  }
}

mutation UpdateMealFoodLog($input: UpdateMealFoodLogInput!) {
  updateMealFoodLog(input: $input)
}
