fragment MealPlanTemplate on MealPlan {
  id
  title
  description
  isDraft
  dailyCalories
  dailyProtein
  dailyCarbs
  dailyFat
  createdAt
  updatedAt
  assignedCount

  weeks {
    id
    weekNumber
    name
    description

    days {
      id
      dayOfWeek
      targetCalories
      targetProtein
      targetCarbs
      targetFat

      meals {
        id
        name
        dateTime
        instructions

        foods {
          id
          name
          quantity
          unit
          caloriesPer100g
          proteinPer100g
          carbsPer100g
          fatPer100g
          fiberPer100g
        }
      }
    }
  }
}

query GetMealPlanTemplates($draft: Boolean) {
  getMealPlanTemplates(draft: $draft) {
    id
    title
    description
    isDraft
    dailyCalories
    dailyProtein
    dailyCarbs
    dailyFat
    weekCount
    assignedCount
    createdAt
    updatedAt
  }
}

query GetMealPlanById($id: ID!) {
  getMealPlanById(id: $id) {
    ...MealPlanTemplate
  }
}

mutation CreateMealPlan($input: CreateMealPlanInput!) {
  createMealPlan(input: $input) {
    id
    success
  }
}

mutation CreateDraftMealTemplate {
  createDraftMealTemplate {
    id
    title
    description
    isDraft
    dailyCalories
    dailyProtein
    dailyCarbs
    dailyFat
    createdAt
    updatedAt
  }
}

mutation UpdateMealPlan($input: UpdateMealPlanInput!) {
  updateMealPlan(input: $input)
}

mutation DeleteMealPlan($id: ID!) {
  deleteMealPlan(id: $id)
}

mutation DuplicateMealPlan($id: ID!) {
  duplicateMealPlan(id: $id)
}

mutation AssignMealPlanToClient($input: AssignMealPlanToClientInput!) {
  assignMealPlanToClient(input: $input)
}

mutation RemoveMealPlanFromClient($planId: ID!, $clientId: ID!) {
  removeMealPlanFromClient(planId: $planId, clientId: $clientId)
}

# Granular update mutations
mutation UpdateMealPlanDetails($input: UpdateMealPlanDetailsInput!) {
  updateMealPlanDetails(input: $input)
}

mutation UpdateMealWeekDetails($input: UpdateMealWeekDetailsInput!) {
  updateMealWeekDetails(input: $input)
}

mutation UpdateMealDayData($input: UpdateMealDayDataInput!) {
  updateMealDayData(input: $input)
}

mutation AddMealToDay($input: AddMealToDayInput!) {
  addMealToDay(input: $input)
}

mutation UpdateMeal($input: UpdateMealInput!) {
  updateMeal(input: $input)
}

mutation RemoveMealFromDay($mealId: ID!) {
  removeMealFromDay(mealId: $mealId)
}

mutation AddFoodToMeal($input: AddFoodToMealInput!) {
  addFoodToMeal(input: $input)
}

mutation UpdateMealFood($input: UpdateMealFoodInput!) {
  updateMealFood(input: $input)
}

mutation RemoveFoodFromMeal($foodId: ID!) {
  removeFoodFromMeal(foodId: $foodId)
}

# Food logging mutations
mutation LogMealFood($input: LogMealFoodInput!) {
  logMealFood(input: $input) {
    id
    name
    quantity
    unit
    calories
    protein
    carbs
    fat
    fiber
    notes
    createdAt
  }
}

mutation UpdateMealFoodLog($input: UpdateMealFoodLogInput!) {
  updateMealFoodLog(input: $input)
}

mutation DeleteMealFoodLog($id: ID!) {
  deleteMealFoodLog(id: $id)
}
